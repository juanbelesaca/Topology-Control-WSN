#Script to extract Mesh Stations Routing Statistics
#Read all the mp-report.xml files generated by mesh nodes
#Give as a result a file with statistics regarding Routing
#Messages (txMgt) del MeshReport
#Stats for num_Runs independent runs of one scenario and one flow
#graficar tasa de mensajes de gestion de enrutamiento
#graficar reenvio total de datos

import re
from numpy import *

snap = [1,2,3,4,5]
num_nodes = 100
num_Runs = 50
num_sim = 7
num_flows = [10,15,20,25,30,35,40]
type_sim = 'ControlRouters' 		#AllRouters - SpanningTree - ControlRouters - ControlRVaz para la carpeta de salida
typeOutDir = 'Out_Reac_ControlR'	#Out_Reac_AllR - Out_Reac_SpanTree - Out_Reac_ControlR - Out_Reac_ControlRVaz carpteta contenedora semejante a type_sim
raiz_ns ='/Users/juandi/Documents' 

for snp in range(0,len(snap)):
	
	for flow in range(0,len(num_flows)):

		fwdUnicast = [0 for i in range(1,num_Runs+1)]
		fwdUnicastBytes = [0 for i in range(1,num_Runs+1)]
		txMgt_Rout = [0 for i in range(1,num_Runs+1)]
		txMgtBytes_Rout = [0 for i in range(1,num_Runs+1)]

		aux=[0 for i in range(1,num_Runs+1)]
		aux1=[0 for i in range(1,num_Runs+1)]


		sout="\n"
		s="\n Snap:"+str(snap[snp])+"\tFlows: "+str(num_flows[flow]) +"\n"
		s+="|fwdUnicastData| |fwdUnicastDataBytes| |txMgt_Routing| |txMgtBytes_Routing|"
		print(s)


		for run in range(0,num_Runs):

			for nodeID in range(0,num_nodes):
				aux[run]=0
				aux1[run]=0

				in_f = raiz_ns+'/Tesis/'+typeOutDir+'/Sim0'+str(num_sim)+'/Snap_'+str(snap[snp])+'/Mesh_Reports/Flows'+str(num_flows[flow])+'/Run'+str(run+1)+'/Node'+str(nodeID)+'.xml'

				input_file = open(in_f,'r')
			
				while True:
					line = input_file.readline()
					if not line: break
				
					if ('fwdUnicastData="' in line):
						data1 = line.split('"')
						fwdUnicast[run] += int(data1[1])
				
					if ('fwdUnicastDataBytes="' in line):
						data2 = line.split('"')
						fwdUnicastBytes[run] += int(data2[1])        
				
					
					if ('txMgt="' in line):
						if (aux[run]==0):
							data3 = line.split('"')
							txMgt_Rout[run] += int(data3[1])
							aux[run]+=1
						 

					if ('txMgtBytes="' in line):
						if (aux1[run]==0):
							data4 = line.split('"')
							txMgtBytes_Rout[run] += int(data4[1])
							aux1[run]+=1

			#valoresTotales de suma
			#sout+=str(fwdUnicast[run])+"\t"+str(fwdUnicastBytes[run])+"\t"+str(txMgt_Rout[run])+"\t"+str(txMgtBytes_Rout[run])+"\n"
			
			  
		print(sout)  
		input_file.close()

		out_f1 = type_sim + '/Sim0'+str(num_sim)+'/MsgRout_FwdData/hwmp_txMgt_Rout_Snap'+str(snap[snp])+'Flow'+str(num_flows[flow])+'.dat'
		output_file1 = open(out_f1,'w')
		savetxt(output_file1, txMgt_Rout)
		#output_file1.write(str(txMgt_Rout))
		output_file1.close()    
			
		out_f2 = type_sim + '/Sim0'+str(num_sim)+'/MsgRout_FwdData/fwdUnicast_Snap'+str(snap[snp])+'Flow'+str(num_flows[flow])+'.dat'
		output_file2 = open(out_f2,'w')
		savetxt(output_file2, fwdUnicast)
		#output_file2.write(str(fwdUnicast))
		output_file2.close()



